name: 上传至Alist-Terabox
on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      path:
        description: '下载路径'
        required: true
        default: 'Teraboxdriver'       
  
jobs:
  Teraboxdriver:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: 增加可用空间 (删除dotnet, android、haskell、CodeQL)
        shell: bash
        run: |
          df -h
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc
          sudo rm -rf /opt/hostedtoolcache/CodeQL
          df -h

      - name: Aria2 Install
        run: |
            sudo apt update
            sudo apt install -y aria2 curl rclone gnupg gpg-agent
            
      - name: 运行Alist
        run: |
          curl -L -o alist.tar.gz https://github.com/alist-org/alist/releases/download/v3.30.0/alist-linux-amd64.tar.gz
          tar -xzf alist.tar.gz
          pwd
          mkdir -p ./data
          cp -f $GITHUB_WORKSPACE/data02/* ./data
          mkdir -p ~/.gnupg
          chmod 700 ~/.gnupg
          echo "use-agent" >> ~/.gnupg/gpg.conf
          echo "${{ secrets.PRIVATE_KEY }}" | gpg --batch --import
          echo "${{ secrets.PRIVATE_KEY }}" > private-key
          #gpg --batch --import private-key
          gpg --list-packets private-key
          gpg --batch --yes --pinentry-mode loopback --passphrase "${{ secrets.PASSPHRASE }}" -o ./data/data.db -d ./data/data.db.gpg
          ls -al ${{github.workspace}}/data
          nohup ./alist server > nohupcmd.out 2>&1 &
          sleep 10s
          cat ./nohupcmd.out
          ls -al ${{github.workspace}}/data

      - name: 'Download file and upload to Alist'
        run: |

          curl -L -o ffmpeg.tar.xz https://johnvansickle.com/ffmpeg/releases/ffmpeg-release-amd64-static.tar.xz
          tar -xvf ffmpeg.tar.xz
          #mv ffmpeg-7.0.1-amd64-static ffmpeg
          mv ffmpeg-*-amd64-static ffmpeg
          rm ffmpeg.tar.xz
          chmod 777 ./ffmpeg/ffmpeg
          ls -al
          echo "${{ secrets.RCLONE_CONF }}" > ./rclone.conf
          mkdir -p downloads
          IFS=$'\n'
          for I in $(cat ./data/not-m3u8_list.txt); do
            DOWNLOAD_FILE=$(basename $I) 
            echo $DOWNLOAD_FILE
            #aria2c --conf $GITHUB_WORKSPACE/aria2.conf --seed-time=0 -d downloads -c "$I" -o "$DOWNLOAD_FILE"
            aria2c --user-agent="Mozilla/5.0" --conf $GITHUB_WORKSPACE/aria2.conf --seed-time=0 -d downloads -c "$I" -o "$DOWNLOAD_FILE"
            ls -al ./downloads
            for M in ./downloads/*.mp4; do
                FILE_SIZE=$(stat -c%s "$M")
                FILE_SIZE_MB=$((FILE_SIZE / 1024 / 1024))
                echo "文件大小: $FILE_SIZE_MB MB"
                if [ "$FILE_SIZE_MB" -gt 800 ]; then
                   echo "文件大于800M，正在分割...."
                   SAVE_NAME=$(basename $M .${M##*.})
                   ../ffmpeg/ffmpeg -i $M -c copy -map 0 -f segment -segment_time 01:00:00 -reset_timestamps 1 $SAVE_NAME_%02d.mp4
                   rm $M
                   ls -al
                   for V in *.mp4
                   do
                     rclone copy --config "./rclone.conf" -v "$V" "Alist:Terabox(海外百度)(200885/Vedio" --retries 30
                     rm $V
                   done
                else
                   echo "文件小于或等于800M，直接上传..."
                   ls -al
                   for V in ./download/*.mp4
                   do
                     rclone copy --config "./rclone.conf" -v "$V" "Alist:Terabox(海外百度)(200885/Vedio" --retries 30
                     rm $V
                   done
                fi
             done
           done
           
      - name: Delete workflow runs
        uses: Mattraks/delete-workflow-runs@v1.2.3
        with:
          token: ${{ secrets.PTAKEN }}
          repository: ${{ github.repository }}
          retain_days: 0
          keep_minimum_runs: 0
